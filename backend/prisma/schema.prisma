// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model CadastroUsuarios {
  id       String @id @default(uuid())
  nome     String
  cpf      String @unique
  email    String
  senha    String
  cep      String
  telefone String

  
  CadastroPedidos CadastroPedidos[]

  create_at DateTime? @default(now())
  update_at DateTime? @default(now())

  @@map("cadastro_usuarios")
}

model CadastroFuncionarios {
  id       String @id @default(uuid())
  nome     String
  cpf      String
  email    String
  senha    String
  telefone String

  hierarquia   CadastroHierarquia @relation(fields: [idHierarquia], references: [id])
  idHierarquia String

  CadastroPedidos CadastroPedidos[]

  create_at DateTime? @default(now())
  update_at DateTime? @default(now())

  @@map("cadastro_Funcionarios")
}

model CadastroProdutos {
  id        String @id @default(uuid())
  nome      String
  descricao String
  preco     String
  categoria String

  CadastroItensPedidos CadastroItensPedidos[]

  create_at DateTime? @default(now())
  update_at DateTime? @default(now())

  @@map("cadastro_Produtos")
}

model CadastroHierarquia {
  id   String @id @default(uuid())
  nome String @unique

  CadastroFuncionarios CadastroFuncionarios[]

  create_at       DateTime?         @default(now())
  update_at       DateTime?         @default(now())


  @@map("cadastro_Hierarquia")
}

model CadastroPedidos {
  id             String @id @default(uuid())
  data_da_compra String
  status         String
  

 funcionarios CadastroFuncionarios @relation(fields: [idFuncionarios], references: [id])
  idFuncionarios String

 usuarios CadastroUsuarios @relation(fields: [idUsuarios], references: [id])
  idUsuarios String

 ItensPedidos CadastroItensPedidos@relation(fields: [idItensPedidos], references: [id])
  idItensPedidos String


  create_at DateTime? @default(now())
  update_at DateTime? @default(now())

  @@map("cadastro_Pedidos")
}

model CadastroItensPedidos {
  id         String @id @default(uuid())
  quantidade String

 CadastroPedidos CadastroPedidos[]

  ItensProdutos CadastroProdutos@relation(fields: [idProdutos], references: [id])
  idProdutos String

  create_at DateTime? @default(now())
  update_at DateTime? @default(now())

  @@map("cadastro_ItensPedidos")
}
